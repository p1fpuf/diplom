generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admins {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String    @unique
  password_hash String
  name          String?
  role          String    @default("admin")
  created_at    DateTime? @default(now()) @db.Timestamp(6)
}

model bookings {
  id               Int       @id @default(autoincrement())
  user_id          Int?
  service_id       Int?
  appointment_time DateTime  @db.Timestamp(6)
  status           String?   @default("ожидает") @db.VarChar(50)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  services         services? @relation(fields: [service_id], references: [id], onUpdate: NoAction)
  users            users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model reviews {
  id         Int       @id @default(autoincrement())
  user_name  String?   @db.VarChar(100)
  rating     Int?
  comment    String?
  source     String?   @default("2GIS") @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model services {
  id               Int        @id @default(autoincrement())
  title            String     @db.VarChar(100)
  description      String?
  image_url        String?
  price            Decimal?   @db.Decimal(10, 2)
  duration_minutes Int?
  created_at       DateTime?  @default(now()) @db.Timestamp(6)
  bookings         bookings[]
}

model users {
  id            Int        @id @default(autoincrement())
  name          String     @db.VarChar(100)
  email         String     @unique @db.VarChar(100)
  phone         String?    @db.VarChar(20)
  password_hash String
  created_at    DateTime?  @default(now()) @db.Timestamp(6)
  bookings      bookings[]
}
